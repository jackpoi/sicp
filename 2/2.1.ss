(load "D:/projects/mine/sicp/2/lib/rat.ss")

(define (make-rat n d)
  (let ((g (gcd n d)))
    (if (< d 0)
      (cons (/ (- n) g) (/ (- d) g))
      (cons (/ n g) (/ d g))
    )
  )
)

(define x (make-rat -2 6))
(define y (make-rat -1 -2))
(print-rat x)
(print-rat y)
(print-rat (add-rat x y))
(print-rat (sub-rat x y))
(print-rat (mul-rat x y))
(print-rat (div-rat x y))
(newline)
(display (equal-rat? x y))
(exit)
