#|
fib 递归会涉及到重复计算，如 fib(5)=fib(4)+fib(3)，而fib(4)=fib(3)+fib(2)
也就是fib(4)和fib(3)都会计算fib(3)的结果，会产生重复计算，当 n 比较大时，重复计算的次数也会更多，会是一个树形结果
可以减少重复计算来减少计算时间，维持表格存储结果用来空间换时间
初始化一个表格，将每次计算出的 n 对应的结果序对(n, fib(n))保存到表格中
后续再计算时，会先查询表格中是否存在 n 对应的结果，只有不存在时才会去计算
而fib(n)=fib(n-1)+fib(n-2) fib(n-1)=fib(n-2)+fib(n-3) ……
也就是只有第一次会进行计算，即fib(n) fib(n-1) fib(n-2)都会被保存在表格中
忽略查询时间时间复杂度为O(n)，也可以将表格替换成查询复杂度为O(1)的映射表

如果将 memo-fib 定义为 (memoize fib)，即 (define memo-fib (memoize fib))
将结果保存到表格时，只会保存 n 和 (memo-fib n) 的值，不会保存(memo-fib n-1)~(memo-fib 1)的值
当计算(memo-fib n-1)还是需要再次进行计算
|#
