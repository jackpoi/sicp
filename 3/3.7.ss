(define (make-account balance pwd)
  (define (withdraw amount)
    (if (>= balance amount)
      (begin (set! balance (- balance amount)) balance)
      "insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (pwdeq? p) (eq? pwd p))
  (define (dispatch p m)
    (if (pwdeq? p)
      (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit) deposit)
            (else (error "Unknown request" m)))
      (lambda (x) (display "Incorrect password"))))
  dispatch
)

(define (make-joint acc origin-pwd another-pwd)
  (lambda (pwd m)
    (if (eq? pwd another-pwd)
      (acc origin-pwd m)
      (lambda (x) (display "Incorrect password"))))
)

(define peter-acc (make-account 100 'qwe))
(define paul-acc (make-joint peter-acc 'qwe 'asd))
(display ((peter-acc 'qwe 'withdraw) 40)) (newline)
(display ((paul-acc 'asd 'withdraw) 40)) (newline)
(display ((paul-acc 'qwe 'withdraw) 40)) (newline)
(display ((peter-acc 'qwe 'withdraw) 10)) (newline)

(exit)
