#|
test-and-set! 获取锁时会有读取互斥元，写入互斥元两个操作，如果不原子化可能会在读取写入之间被其他过程扰乱
如初始锁是空闲的，A过程尝试获取锁，发现为false，准备获取并将其改为true，在改为true之前B过程也尝试获取锁，此时锁还是false，这样两个过程都获取到了锁
A  mutex  B
│    ↓    │
│    F    │
└────┼────┘
F    │    F
├────┼────┤
↓    ↓    ↓
T    T    T
|#
